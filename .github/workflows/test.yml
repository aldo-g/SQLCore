name: Run Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest  # Official SQL Server image
        ports:
          - 1433:1433
        env:
          SA_PASSWORD: "YourStrong@Password"
          ACCEPT_EULA: "Y"
        options: --platform linux/amd64

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install Poetry using the GitHub Action instead of curl
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          poetry-version: '2.0.1'  # or whichever version you wish to use

      # (Optional) Step 3.1: Add Poetry to PATH (the action may already do this)
      - name: Ensure Poetry is in PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      # Step 4: Install Dependencies
      - name: Install Dependencies
        run: |
          poetry install
        env:
          PYTHONPATH: .

      # Step 5: Wait for Database to Start
      - name: Wait for SQL Server
        run: |
          for i in {1..30}; do
            /opt/mssql-tools/bin/sqlcmd -S localhost,1433 -U sa -P "YourStrong@Password" -Q "SELECT 1" && break || sleep 2
          done

      # Step 6: Run Database Setup Script
      - name: Run Database Setup
        run: |
          /opt/mssql-tools/bin/sqlcmd -S localhost,1433 -U sa -P "YourStrong@Password" -i docker/setup.sql

      # Step 7: Run Tests
      - name: Run Tests
        run: |
          poetry run pytest
        env:
          PYTHONPATH: .